/*var history = [Immutable.List([])];
var historyIndex = 0;
function operation(fn) {
 history = history.slice(0, historyIndex + 1);
 var newVersion = fn(history[historyIndex]);
 history.push(newVersion);
    historyIndex++;
	  draw();
}
function addDot(x, y) {
    operation(function(data) {
        return data.push(Immutable.Map({
            x: x, y: y, id: +new Date()
        }));
    });
}

function removeDot(id) {
    operation(function(data) {
        return data.filter(function(dot) {
            return dot.get('id') !== id;
        });
    });
}

function draw() {
    dots.innerHTML = '';
    history[historyIndex].forEach(function(dot) {
        var elem = dots.appendChild(document.createElement('div'));
        elem.className = 'dot';
        elem.style.left = dot.get('x') + 'px';
        elem.style.top = dot.get('y') + 'px';
        
        // clicking on a dot removes it.
        elem.addEventListener('click', function(e) {
            removeDot(dot.get('id'));
            e.stopPropagation();
        });
        
    });
    undo.disabled = (historyIndex != 0) ? '' : 'disabled';
    redo.disabled = (historyIndex !== history.length - 1) ? '' : 'disabled';
}

// clicking the background adds a dot
dots.addEventListener('click', function(e) {
    addDot(e.pageX, e.pageY);
});

// clicking undo goes back in time, unless
// there is no history left.
undo.addEventListener('click', function() {
    if (historyIndex > 0) historyIndex--;
    draw();
});

// clicking redo goes forward in time, unless
// there is no future left.
redo.addEventListener('click', function() {
    if (historyIndex < history.length) historyIndex++;
    draw();
});

draw();

 var history = [Immutable.List([])];
var historyIndex = 0;
function operation(fn) {
 history = history.slice(0, historyIndex + 1);
 var newVersion = fn(history[historyIndex]);
 history.push(newVersion);
    historyIndex++;
	  Txt();
}
function addHTML(expression, result) {
    operation(function(data) {
        return data.push(Immutable.Map({
            expression: expression, result: result, id: +new Date()
        }));
    });
}

function removeHTML(id) {
   document.getElementById("RESULTHTML").innerHTML = '';
document.getElementById("RESULTTEXT").innerHTML = '';
document.getElementById("result").innerHTML = '';
document.getElementById("area").innerHTML = '';
    };


function Txt() {
   var expression = getSelectiontextarea( document.getElementById("text") );
	document.getElementById("text").focus();
	document.getElementById("text").innerHTML = expression.replace(/\n/g, '<br>');
	var result=document.getElementById("result");
	
document.getElementById("RESULTTEXT").innerText='<br><span class="move_left">'+expression+'</span>';
document.getElementById("RESULTHTML").innerHTML='<br><span class="move_left">'+expression+'</span>';
document.getElementById("RESULTTEXT").id = "text_res";
document.getElementById("RESULTHTML").id = "html_res";
document.getElementById("result").innerHTML += '<p><span id="RESULTTEXT">qwe</span></p>';
document.getElementById("area").innerHTML += '<p><span id="RESULTHTML">qwe</span></p>';
document.getElementById("text").value='';
        // clicking on a dot removes it.
        elem.addEventListener('click', function(e) {
           document.getElementById("RESULTHTML").innerHTML = '';
document.getElementById("RESULTTEXT").innerHTML = '';
document.getElementById("result").innerHTML = '';
document.getElementById("area").innerHTML = '';
            e.stopPropagation();
        });
        
    });
    undo.disabled = (historyIndex != 0) ? '' : 'disabled';
    redo.disabled = (historyIndex !== history.length - 1) ? '' : 'disabled';
}

// clicking the background adds a dot
dots.addEventListener('click', function(e) {
    addHTML(expression, result);
});

// clicking undo goes back in time, unless
// there is no history left.
undo.addEventListener('click', function Undo() {
    if (historyIndex > 0) historyIndex--;
    Txt();
});

// clicking redo goes forward in time, unless
// there is no future left.
redo.addEventListener('click', function Redo() {
    if (historyIndex < history.length) historyIndex++;
    Txt();
});

Txt();*/